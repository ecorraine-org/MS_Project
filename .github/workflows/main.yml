name: Build Project on Trigger

on:
  workflow_dispatch: { }
  push:
    branches:
      - main

env:
  TARGET_PLATFORM: "StandaloneWindows64"
  UNITY_VERSION: "2023.2.14f1"
  LOCAL_PATH: 'Corraine\Documents\HAL\GradExhibit\'
  PROJECT_PATH: 'Corraine\Documents\HAL\GradExhibit\MS_Project\MS_Project'

defaults:
  run:
    shell: powershell
    
jobs:
  buildApplication:
    name: Build Application
    runs-on: [ self-hosted, Windows, x64 ]
    strategy:
      fail-fast: false
      matrix:
        buildMethod:
          - CustomBuild.BuildForWindows
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          clean: false
          submodules: recursive
          
      - name: Setup Unity and Build
        run: |
          $Date = Get-Date -Format yyMMdd
          Write-Host "Locating Unity..."
          $unityPath = "C:\Program Files\Unity\Editor\$env:UNITY_VERSION\Editor\Unity.exe"
          Write-Host "Attempting to Build Project..."
          $logFile = "C:\Users\$env:PROJECT_PATH\Build\Logs\build-$Date.log"
          & $unityPath -batchmode -quit -projectPath "C:\Users\$env:PROJECT_PATH" -executeMethod ${{ matrix.buildMethod }} -nographics -logFile $logFile -buildTarget $env:TARGET_PLATFORM

  compressFiles:
    needs: buildApplication
    name: Compress Files
    runs-on: [ self-hosted, Windows, x64 ]
    strategy:
      fail-fast: false
    steps:
      - name: Check Build Directory and Compress Files
        run:  |
          $Date = Get-Date -Format yyMMdd
          Write-Host "Checking on build directory for files..."
          $Files = @(Get-ChildItem -Path "C:\Users\$env:PROJECT_PATH\Build\Windows\*")
          if ($Files.length -eq 0) {
            Write-Host "Files found. Starting to compress files..."
            $zipFile = "C:\Users\$env:LOCAL_PATH\Build\Build-$Date.zip"
            Compress-Archive -Path "C:\Users\$env:PROJECT_PATH\Build\Windows\*" -DestinationPath $zipFile -Force
          }
          else {
            Write-Host "No files found to compress in the specified directory."
          }

  uploadFiles:
    needs: [ buildApplication, compressFiles ]
    name: Upload Files
    runs-on: [ self-hosted, Windows, x64 ]
    strategy:
      fail-fast: false
    steps:
      - name: Set Date to Environment
        run: |
          $Date = Get-Date -Format yyMMdd
          echo "BUILD_DATE=$Date"  | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

      - name: Upload App
        uses: actions/upload-artifact@v4
        with:
          name: DevelopmentBuild-${{ env.BUILD_DATE }}
          path: C:\Users\$env:LOCAL_PATH\Build\Build-${{ env.BUILD_DATE }}.zip
          retention-days: 7
          